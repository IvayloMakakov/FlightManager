@using FlightManager.Addings;
@using Microsoft.AspNetCore.Identity;
@model PaginatedList<Flight>

@inject Microsoft.AspNetCore.Identity.SignInManager<User> SignInManager;
@inject Microsoft.AspNetCore.Identity.UserManager<User> UserManager


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-actions no-color">
        <p>
            Search by destination to: <input type="text" name="ToSearch" value="@ViewData["ToSearch"]" class="form-control w-25" />
            From: <input type="text" name="FromSearch" value="@ViewData["FromSearch"]" class="form-control w-25" />
            <input type="submit" value="Search..." class="btn btn-primary" />
            <a asp-action="Index">Clear</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
               LocationFrom
            </th>
            <th>
                LocationTo
            </th>
            <th>
                PlaneTakingOff
            </th>
            <th>
                PlaneLanding
            </th>
            <th>
                PlaneType
            </th>
            <th>
                PlaneUniqueNumber
            </th>
            <th>
                PilotName
            </th>
            <th>
                PassengerCapacity
            </th>
            <th>
                BusinessCapacity
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LocationFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LocationTo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlaneTakingOff)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlaneLanding)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlaneType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PlaneUniqueNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PilotName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PassengerCapacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BusinessCapacity)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.FlightId">Details</a> |
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin")) {
                        <a asp-action="Edit" asp-route-id="@item.FlightId">Edit</a>
                    @("|")
                    < a asp - action = "Delete" asp - route - id = "@item.FlightId" > Delete </ a >
                    }
                </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Back
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
